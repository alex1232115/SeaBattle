import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) throws Exception {

        Player player1 = new Player(1);
        Player player2 = new Player(2);


//        player1.getGameField().insertShip();
        input(player1.getGameField());
        player1.getGameField().printGameField();

    }

    public static void input(GameField gameField) throws Exception {

        System.out.println("–ù–∞—á–Ω—ë–º —Ä–∞—Å—Å—Ç–∞–≤–ª—è—Ç—å –∫–æ—Ä–∞–±–ª–∏ –Ω–∞ –ø–æ–ª–µ Player1. –î—Ä—É–≥–æ–π –∏–≥—Ä–æ–∫, –Ω–µ —Å–º–æ—Ç—Ä–∏!\n"
                + "–í–≤–µ–¥–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —á–µ—Ç—ã—Ä–µ—Ö–ø–∞–ª—É–±–Ω–æ–≥–æ –∫–æ—Ä–∞–±–ª—è (—Ñ–æ—Ä–º–∞—Ç: x,y;x,y;x,y;x,y)");
        List<Integer> coordinates = new ArrayList<>();

        Scanner scanner = new Scanner(System.in);

        String[] array = scanner.next().split(";");

        for (String i : array) {
            String[] couple = i.split(",");

            Integer first = Integer.valueOf(couple[0]);
            Integer second = Integer.valueOf(couple[1]);

            coordinates.add(first);
            coordinates.add(second);
        }

        //–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å —Ä–∞—Å—Å—Ç–∞–Ω–æ–≤–∫–∏

        //–ü—Ä–æ–≤–µ—Ä–∫–∞ 1 –∏ 2 —É—Å–ª–æ–≤–∏—è
        for (int i = 0; i < coordinates.size(); i++) {
            if (coordinates.get(i) < 0 || coordinates.get(i) > 9 || coordinates.get(i) < 0 || coordinates.get(i) > 9) {
                throw new Exception("–í–≤–µ–¥–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ, –Ω–µ –ø–æ–ø–∞–¥–∞—é—â–∏–µ –≤ –Ω—É–∂–Ω—ã–π –¥–∏–∞–ø–∞–∑–æ–Ω (–æ—Ç 0 –¥–æ 9)");
            } else if (coordinates.size() != 8) {
                throw new Exception("–ù–µ–≤–µ—Ä–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç");
            }
        }

        //–ü—Ä–æ–≤–µ—Ä–∫–∞ 3 —É—Å–ª–æ–≤–∏—è
        for (int i = 0; i < coordinates.size() - 2; i = i + 2) {
            if (coordinates.get(i) - coordinates.get(i + 2) > 1 || coordinates.get(i) - coordinates.get(i + 2) < -1) {
                throw new Exception("–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –¥–æ–ª–∂–Ω—ã –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è —Ä—è–¥–æ–º –¥—Ä—É–≥ —Å –¥—Ä—É–≥–æ–º");
            }
        }

        //–ü—Ä–æ–≤–µ—Ä–∫–∞ 3 —É—Å–ª–æ–≤–∏—è
        for (int i = 1; i < coordinates.size() - 2; i = i + 2) {
            if (coordinates.get(i) - coordinates.get(i + 2) > 1 || coordinates.get(i) - coordinates.get(i + 2) < -1) {
                throw new Exception("–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –¥–æ–ª–∂–Ω—ã –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è —Ä—è–¥–æ–º –¥—Ä—É–≥ —Å –¥—Ä—É–≥–æ–º");
            }
        }

        //–ü—Ä–æ–≤–µ—Ä–∫–∞ 3 —É—Å–ª–æ–≤–∏—è
        for (int i = 0; i < coordinates.size() - 4; i++) {
            if ((coordinates.get(i) + coordinates.get(i + 1)) - (coordinates.get(i + 2) + coordinates.get(i + 3)) != 1) {
                throw new Exception("–í–≤–æ–¥–∏–º—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã");
            }
        }

        //–ü—Ä–æ–≤–µ—Ä–∫–∞ 4 —É—Å–ª–æ–≤–∏—è
        for (int i = 0; i < coordinates.size() - 1; i++) {
            if (!gameField.getGameField()[i][i + 1].equals("‚¨ú")) {
                throw new Exception("–Ø—á–µ–π–∫–∞ —Å –≤–≤–µ–¥—ë–Ω–Ω—ã–º –∑–Ω–∞—á–µ–Ω–∏–µ–º –∑–∞–Ω—è—Ç–∞");
            }
        }

        //–ü—Ä–æ–≤–µ—Ä–∫–∞ 5 —É—Å–ª–æ–≤–∏—è !!!!!!!!!!!!!!!!!! –î–û–î–ï–õ–ê–¢–¨ –ò –ü–†–û–í–ï–†–ò–¢–¨ –ü–†–ê–í–ò–õ–¨–ù–û–°–¢–¨ –í–°–ï–ì–û –≠–¢–û–ì–û ‚Üï
        for (int i = 0; i < coordinates.size() - 1; i++) {
            if (!gameField.getGameField()[i][i + 1].equals("üåä")) {
                throw new Exception("–Ø—á–µ–π–∫–∞ —Å –≤–≤–µ–¥—ë–Ω–Ω—ã–º –∑–Ω–∞—á–µ–Ω–∏–µ–º –∑–∞–Ω—è—Ç–∞");
            }
        }

        System.out.println(coordinates);
    }
}
